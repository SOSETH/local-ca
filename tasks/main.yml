---
  - name: Check for unconfigured call
    fail:
      msg: "You need to set caname, see README.md"
    when: local_ca_caname is not defined

  # We used to allow unquoted values for the file mode. The problem is that leading zeros lead to the values being
  # interpreted as octal, which is now impossible to avoid in 2.12+ (or so it appears).
  # For now, check if local_ca_mode looks like one of the commonly used values after conversion and bail out if that is
  # the case!
  - name: Check for legacy mode call
    fail:
      msg: "local_ca_mode needs to be a string to avoid octal conversion!"
    # 640, 755, 750, 644
    when: local_ca_mode in [416, 493, 488, 420] and not local_ca_skip_octal_check

  - name: Check local execution
    set_fact:
      local_ca_is_local: "{{ local_ca_workhost == 'localhost' }}"

  - name: Check local target
    set_fact:
      local_ca_is_to_local: "{{ inventory_hostname == 'local' }}"

  - name: Check local target user
    set_fact:
      local_ca_is_to_local_same_user: "{{ local_ca_is_to_local and local_ca_owner == ansible_user_id and local_ca_group == ansible_user_gid }}"

  - name: Set work dir
    set_fact:
      workdir: "secrets/pki/{{ local_ca_caname }}"
    when: local_ca_is_local|bool

  - name: Set work dir
    set_fact:
      workdir: "{{ local_ca_basepath }}/{{ local_ca_caname }}"
    when: not local_ca_is_local

  - name: Create CA directory
    file:
      name: "{{ workdir }}"
      state: directory
    check_mode: False
    delegate_to: "{{ local_ca_workhost }}"

  - name: Check if CA exists
    stat:
      path: "{{ workdir }}/easyrsa"
    register: castat
    changed_when: False
    delegate_to: "{{ local_ca_workhost }}"

  - name: Copy tar archive
    copy:
      src: ca.template.tar
      dest: "/tmp/easyrsa.tar"
    when: not castat.stat.exists
    check_mode: False
    delegate_to: "{{ local_ca_workhost }}"

  - name: Extract tar archive
    command: tar xf /tmp/easyrsa.tar -C "{{ workdir }}"
    args:
      warn: false
    when: not castat.stat.exists
    check_mode: False
    delegate_to: "{{ local_ca_workhost }}"

  - name: Configure easyrsa
    template:
      src: vars.j2
      dest: "{{ workdir }}/vars"
    delegate_to: "{{ local_ca_workhost }}"
    when: not castat.stat.exists

  - name: Init PKI
    command: ./easyrsa init-pki
    args:
      chdir: "{{ workdir }}"
      creates: "pki"
    delegate_to: "{{ local_ca_workhost }}"

  - name: Generate CA certificate
    command: ./easyrsa --batch --req-cn="{{ local_ca_caname }} Ansible local PKI" build-ca nopass
    args:
      chdir: "{{ workdir }}"
      creates: "pki/ca.crt"
    delegate_to: "{{ local_ca_workhost }}"

  - name: Apply templates
    template:
      src: openssl-1.0.cnf.j2
      dest: "{{ workdir }}/openssl-1.0.cnf"
    with_items:
      - openssl-1.0.cnf.j2
    delegate_to: "{{ local_ca_workhost }}"
    when: not castat.stat.exists

  - name: Handle server certificate request
    include_tasks: certificate.yml
    vars:
      - local_ca_instance: "{{ local_ca_server }}"
      - local_ca_type: server
    when: local_ca_server is defined

  - name: Handle client certificate request
    include_tasks: certificate.yml
    vars:
      - local_ca_instance: "{{ local_ca_client }}"
      - local_ca_type: client
    when: local_ca_client is defined

  - name: Handle dual certificate request
    include_tasks: certificate.yml
    vars:
      - local_ca_instance: "{{ local_ca_both }}"
      - local_ca_type: both
    when: local_ca_both is defined

  - name: Handle Kerberos KDC certificate request
    include_tasks: certificate.yml
    vars:
      - local_ca_instance: "{{ local_ca_kdc }}"
      - local_ca_type: kerberos-kdc
    when: local_ca_kdc is defined

  - name: Handle DH parameters request
    include_tasks: dhparam.yml
    when: local_ca_dhparam is defined

  - name: Handle ca information request
    include_tasks: ca.yml
    when: local_ca_ca is defined
